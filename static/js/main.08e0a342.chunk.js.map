{"version":3,"sources":["SkillView.tsx","Search.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SkillView","props","colSpan","className","skill","skillName","timing","roll","subject","range","cost","maxSL","critical","useRestraint","learnRestraint","effect","Search","name","defaultValue","viewingClass","onChange","event","setViewingClass","target","value","Object","values","skillData","map","data","App","require","useState","viewingSkills","setViewingSkills","useEffect","skills","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"unGAgCeA,MA7Bf,SAAmBC,GA0BlB,OAxBC,kCACC,6BACC,oBAAIC,QAAS,EAAGC,UAAU,kBAA1B,SAA6CF,EAAMG,MAAMC,cAE1D,+BACC,qBAAIH,QAAS,EAAGC,UAAU,iBAA1B,4CAAkDF,EAAMG,MAAME,UAC9D,qBAAIJ,QAAS,EAAGC,UAAU,iBAA1B,0BAA+CF,EAAMG,MAAMG,QAC3D,qBAAIL,QAAS,EAAGC,UAAU,iBAA1B,0BAA+CF,EAAMG,MAAMI,cAE5D,qBAAIL,UAAU,YAAd,UACC,qBAAID,QAAS,EAAGC,UAAU,iBAA1B,0BAA+CF,EAAMG,MAAMK,SAC3D,qBAAIP,QAAS,EAAGC,UAAU,iBAA1B,gCAAgDF,EAAMG,MAAMM,QAC5D,qBAAIR,QAAS,EAAGC,UAAU,iBAA1B,4BAAiDF,EAAMG,MAAMO,YAE9D,+BACC,qBAAIT,QAAS,EAAGC,UAAU,eAA1B,kDAAiDF,EAAMG,MAAMQ,YAC7D,qBAAIV,QAAS,EAAGC,UAAU,eAA1B,sCAA+CF,EAAMG,MAAMS,gBAC3D,qBAAIX,QAAS,EAAGC,UAAU,eAA1B,sCAA+CF,EAAMG,MAAMU,qBAE5D,6BACC,oBAAIZ,QAAS,EAAGC,UAAU,cAA1B,SAAyCF,EAAMG,MAAMW,e,MCH1CC,MAnBf,SAAgBf,GASf,OACC,gCACC,oDACA,wBAAQE,UAAU,cAAcc,KAAK,cAAcC,aAAcjB,EAAMkB,aAAcC,SAP/D,SAACC,GACxBpB,EAAMqB,gBAAgBD,EAAME,OAAOC,QAMlC,SAVMC,OAAOC,OAAOzB,EAAM0B,WAAWC,KAAI,SAACC,GAAD,OAA+B,wBAAwBL,MAAOK,EAAKZ,KAApC,SAA2CY,EAAKZ,MAAnCY,EAAKZ,eCqB9Ea,MArBf,WACE,IAAMH,EAAUI,EAAQ,IACxB,EAAqCC,mBAAiB,kCAAtD,mBAAOb,EAAP,KAAoBG,EAApB,KACA,EAAuCU,mBAAS,IAAhD,mBAAOC,EAAP,KAAqBC,EAArB,KAIA,OAHAC,qBAAU,kBAAID,EAAiBP,EAAUR,GAAciB,UAAQ,CAACjB,EAAaQ,IAC7EU,QAAQC,IAAIL,GAGV,sBAAK9B,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,CACEwB,UAAWA,EACXR,aAAcA,EACdG,gBAAiBA,MAGrB,qBAAKnB,UAAU,YAAf,SAA4B8B,EAAcL,KAAI,SAACxB,GAAD,OAAS,cAAC,EAAD,CAAWA,MAAOA,aCPhEmC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.08e0a342.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\r\nimport \"./SkillView.css\";\r\n\r\nfunction SkillView(props:any){\r\n\tconst view=(\r\n\t\t<table>\r\n\t\t\t<tr>\r\n\t\t\t\t<th colSpan={3} className=\"skill-name cell\">{props.skill.skillName}</th>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td colSpan={1} className=\"three-col cell\">タイミング:{props.skill.timing}</td>\r\n\t\t\t\t<td colSpan={1} className=\"three-col cell\">判定:{props.skill.roll}</td>\r\n\t\t\t\t<td colSpan={1} className=\"three-col cell\">対象:{props.skill.subject}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr className=\"three-col\">\r\n\t\t\t\t<td colSpan={1} className=\"three-col cell\">射程:{props.skill.range}</td>\r\n\t\t\t\t<td colSpan={1} className=\"three-col cell\">コスト:{props.skill.cost}</td>\r\n\t\t\t\t<td colSpan={1} className=\"three-col cell\">最大SL:{props.skill.maxSL}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td colSpan={1} className=\"two-col cell\">クリティカル:{props.skill.critical}</td>\r\n\t\t\t\t<td colSpan={1} className=\"two-col cell\">使用制限:{props.skill.useRestraint}</td>\r\n\t\t\t\t<td colSpan={1} className=\"two-col cell\">取得制限:{props.skill.learnRestraint}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td colSpan={3} className=\"effect cell\">{props.skill.effect}</td>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t);\r\n\treturn view;\r\n}\r\n\r\nexport default SkillView;","import React from \"react\";\r\nimport \"./Search.css\";\r\n\r\nfunction Search(props:any){\r\n\tconst selectClass=()=>{\r\n\t\treturn Object.values(props.skillData).map((data:any):React.ReactElement=><option key={data.name} value={data.name}>{data.name}</option>);\r\n\t};\r\n\r\n\tconst handleClassChange=(event:any)=>{\r\n\t\tprops.setViewingClass(event.target.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>クラス</h2>\r\n\t\t\t<select className=\"selectClass\" name=\"selectClass\" defaultValue={props.viewingClass} onChange={handleClassChange}>\r\n\t\t\t\t{selectClass()}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Search;","import \"./App.css\";\r\nimport SkillView from \"./SkillView\";\r\nimport Search from \"./Search\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n  const skillData=require(\"./class_skills/Skills.json\");\r\n  const [viewingClass,setViewingClass]=useState<string>(\"ウォーリア\");\r\n  const [viewingSkills,setViewingSkills]=useState([]);\r\n  useEffect(()=>setViewingSkills(skillData[viewingClass].skills),[viewingClass,skillData]);\r\n  console.log(viewingSkills);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Search_col\">\r\n        <Search\r\n          skillData={skillData}\r\n          viewingClass={viewingClass}\r\n          setViewingClass={setViewingClass}\r\n        />\r\n      </div>\r\n      <div className=\"Skill_col\">{viewingSkills.map((skill)=><SkillView skill={skill}/>)}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}