{"version":3,"sources":["SkillView.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SkillView","props","colSpan","className","skill","skillName","timing","roll","subject","range","cost","maxSL","useRestraint","learnRestraint","effect","App","skillData","require","useState","viewingClass","viewingSkills","setViewingSkills","useEffect","skills","console","log","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"k2DA+BeA,MA5Bf,SAAmBC,GAyBlB,OAvBC,kCACC,6BACC,oBAAIC,QAAS,EAAGC,UAAU,kBAA1B,SAA6CF,EAAMG,MAAMC,cAE1D,+BACC,qBAAIH,QAAS,EAAGC,UAAU,iBAA1B,4CAAkDF,EAAMG,MAAME,UAC9D,qBAAIJ,QAAS,EAAGC,UAAU,iBAA1B,0BAA+CF,EAAMG,MAAMG,QAC3D,qBAAIL,QAAS,EAAGC,UAAU,iBAA1B,0BAA+CF,EAAMG,MAAMI,cAE5D,qBAAIL,UAAU,YAAd,UACC,qBAAID,QAAS,EAAGC,UAAU,iBAA1B,0BAA+CF,EAAMG,MAAMK,SAC3D,qBAAIP,QAAS,EAAGC,UAAU,iBAA1B,gCAAgDF,EAAMG,MAAMM,QAC5D,qBAAIR,QAAS,EAAGC,UAAU,iBAA1B,4BAAiDF,EAAMG,MAAMO,YAE9D,+BACC,qBAAIT,QAAS,EAAGC,UAAU,eAA1B,sCAA+CF,EAAMG,MAAMQ,gBAC3D,qBAAIV,QAAS,EAAGC,UAAU,eAA1B,sCAA+CF,EAAMG,MAAMS,qBAE5D,6BACC,oBAAIX,QAAS,EAAGC,UAAU,cAA1B,SAAyCF,EAAMG,MAAMU,eCJ1CC,MAff,WACE,IAAMC,EAAUC,EAAQ,IACxB,EAAqCC,mBAAiB,kCAAtD,mBAAOC,EAAP,KACA,GADA,KACuCD,mBAAS,KAAhD,mBAAOE,EAAP,KAAqBC,EAArB,KAIA,OAHAC,qBAAU,kBAAID,EAAiBL,EAAUG,GAAcI,UAAQ,CAACJ,EAAaH,IAC7EQ,QAAQC,IAAIL,GAGV,sBAAKjB,UAAU,MAAf,UACE,qBAAKA,UAAU,eACf,qBAAKA,UAAU,YAAf,SAA4BiB,EAAcM,KAAI,SAACtB,GAAD,OAAS,cAAC,EAAD,CAAWA,MAAOA,aCDhEuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.09638a21.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\r\nimport \"./SkillView.css\";\r\n\r\nfunction SkillView(props:any){\r\n\tconst view=(\r\n\t\t<table>\r\n\t\t\t<tr>\r\n\t\t\t\t<th colSpan={3} className=\"skill-name cell\">{props.skill.skillName}</th>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td colSpan={1} className=\"three-col cell\">タイミング:{props.skill.timing}</td>\r\n\t\t\t\t<td colSpan={1} className=\"three-col cell\">判定:{props.skill.roll}</td>\r\n\t\t\t\t<td colSpan={1} className=\"three-col cell\">対象:{props.skill.subject}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr className=\"three-col\">\r\n\t\t\t\t<td colSpan={1} className=\"three-col cell\">射程:{props.skill.range}</td>\r\n\t\t\t\t<td colSpan={1} className=\"three-col cell\">コスト:{props.skill.cost}</td>\r\n\t\t\t\t<td colSpan={1} className=\"three-col cell\">最大SL:{props.skill.maxSL}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td colSpan={1} className=\"two-col cell\">使用制限:{props.skill.useRestraint}</td>\r\n\t\t\t\t<td colSpan={2} className=\"two-col cell\">取得制限:{props.skill.learnRestraint}</td>\r\n\t\t\t</tr>\r\n\t\t\t<tr>\r\n\t\t\t\t<td colSpan={3} className=\"effect cell\">{props.skill.effect}</td>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t);\r\n\treturn view;\r\n}\r\n\r\nexport default SkillView;","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport SkillView from \"./SkillView\";\nimport React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const skillData=require(\"./class_skills/Skills.json\");\n  const [viewingClass,setViewingClass]=useState<string>(\"ウォーリア\");\n  const [viewingSkills,setViewingSkills]=useState([]);\n  useEffect(()=>setViewingSkills(skillData[viewingClass].skills),[viewingClass,skillData]);\n  console.log(viewingSkills);\n\n  return (\n    <div className=\"App\">\n      <div className=\"Search_col\"></div>\n      <div className=\"Skill_col\">{viewingSkills.map((skill)=><SkillView skill={skill}/>)}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}